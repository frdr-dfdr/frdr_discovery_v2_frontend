version: '3'
volumes:
  solr_data_vol:
  postgres_data_vol:
  geoblacklight_data_vol:
  geoserver_data_vol:
  promtail_data_vol:

services:
  geoblacklight:
    image: ghcr.io/frdr-dfdr/geodisy-geoblacklight:docker
    environment:
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: "true"
      SECRET_KEY_BASE: "{{ rails_secret_key_base }}"
      SOLR_URL: http://solr:8983/solr/geoblacklight
      GEOBLACKLIGHT_POSTGRES_USER: postgres
      GEOBLACKLIGHT_POSTGRES_PASSWORD: postgres
      GEOBLACKLIGHT_POSTGRES_HOST: db
      GEOBLACKLIGHT_POSTGRES_PORT: 5432
    volumes:
      - geoblacklight_data_vol:/usr/src/app 
        #- ./geoblacklight/start.sh:/usr/src/geoblacklight/start.sh
    ports:
      - "3001:3000"
    depends_on:
      - db
      - solr
      #- nginx

  solr:
    image: local/geo_solr
    volumes:
      - solr_data_vol:/var/solr/data
    ports:
      - "8983:8983"
  
        #  geoserver:
        #    image: kartoza/geoserver
        #    environment:
        #      - GEOSERVER_ADMIN_USER=admin
        #      - GEOSERVER_ADMIN_PASSWORD=testpassword
        #    volumes:
        #      - geoserver_data_vol:/usr/local/tomcat/webapps/geoserver/data
        #    networks:
        #      - geodisy
        #    ports:
        #      - "8600:8080"
  
  db:
    image: postgres:12
    volumes:
      - postgres_data_vol:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  nginx:
    image: nginx:1.19
    logging:
      driver: "journald"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf
      - /etc/ssl/:/etc/ssl/
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - "443:443"
      - "80:80"

    #  promtail:
    #    image: grafana/promtail:latest
    #    logging:
    #      driver: "journald"
    #    volumes:
    #      - ./promtail/promtail-{{ promtail_node_type }}-config.yaml:/etc/promtail/promtail-{{ promtail_node_type }}-config.yaml
    #      - promtail_data:/tmp
    #      - /run/log:/var/log 
    #    command: ["-config.file=/etc/promtail/promtail-{{ promtail_node_type }}-config.yaml"]
    #    extra_hosts:
    #      - "{{ monitor.name }}:{{ monitor.address }}" 
    #
    #    {# This section can be used once deployed on a Ubuntu. Until then, the managed_hosts role will not work,
    #       may not have the required facts
    #    {%- for host in groups['monitor_hosts']  %} 
    #      - "{{ hostvars[host]['inventory_hostname_short'] }}:{{ hostvars[host]['ansible_default_ipv4']['address'] }}" 
    #    {%- endfor %} 
    #    #}
    # 

